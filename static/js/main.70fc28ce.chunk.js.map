{"version":3,"sources":["index.js","App.js"],"names":["ReactDOM","render","document","getElementById","Calculator","props","state","input","memory","counter","operator","lastOperator","display","answer","inputHandle","bind","decimalHandle","operatorHandle","sqrtHandle","percentHandle","equalsHandle","clearHandle","event","value","target","textContent","this","setState","includes","length","console","log","match","slice","designOperator","num","Math","sqrt","toString","regex","str","res","i","eval","clear","className","id","onClick","title","React","Component"],"mappings":"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","file":"static/js/main.70fc28ce.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Calculator from './App';\n\nReactDOM.render(<Calculator />, document.getElementById('root'));","import React from 'react';\nimport './App.css';\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: '',\n      memory: '',\n      counter: 0,\n      operator: '',\n      lastOperator: '',\n      display: '',\n      answer: ''\n    }\n    this.inputHandle = this.inputHandle.bind(this);\n    this.decimalHandle = this.decimalHandle.bind(this);\n    this.operatorHandle = this.operatorHandle.bind(this);\n    this.sqrtHandle = this.sqrtHandle.bind(this);\n    this.percentHandle = this.percentHandle.bind(this);\n    this.equalsHandle = this.equalsHandle.bind(this);\n    this.clearHandle = this.clearHandle.bind(this);\n  }\n\n  inputHandle(event) {\n    let value = event.target.textContent;\n    let input;\n    let counter;\n    let display;\n    this.setState(state => {\n      if (state.display.includes('=') || state.display.includes('sqrt')) { // inputing after '=' or 'sqrt' is pressed\n        if (value === '00')\n          value = '0';\n        return {\n          input: value,\n          memory: '',\n          counter: 1,\n          operator: '',\n          display: value,\n          answer: ''\n        }\n      }\n      if (value === '0' || value === '00') { // input is 0 or 00\n        if (state.input.length === 1 && state.input[0] === '0') { // first num is 0\n          input = '';\n          counter = 0;\n          display = '';\n        } else if (state.input.length === 0) {\n          console.log('zero input in action');\n          input = '0';\n          counter = 1;\n          display = '0';\n          // ** 09/10 ** //\n        } else if (state.display.length === 3 && state.display[1] === '-') {\n          console.log('minus case');\n          input = '**0';\n          counter = 1;\n          display = '0';\n          // ** //\n        } else { // second zeros, like 10, 100\n          console.log('number');\n          input = value;\n          counter = 1;\n          display = value;\n        }\n        return {\n          input: state.input + input,\n          counter: state.counter + counter,\n          operator: '',\n          display: state.display + display,\n          answer: ''\n        }\n      } else { // input is any other number\n        let regex = /[+-/*//]/;\n        let display = '';\n        if (state.input.length === 1 && state.input[0] === '0') {\n          if (state.memory.length > 0 && state.memory[state.memory.length - 1].match(regex)) {\n            display = state.display.slice(0, state.display.length - 2);\n            // return {\n            //   input: value,\n            //   counter: 1,\n            //   operator: '',\n            //   display: display + value,\n            //   answer: ''\n            // }\n          }\n          return {\n            input: value,\n            counter: 1,\n            operator: '',\n            display: (display.length > 0) ? (display + ' ' + value) : value,\n            answer: ''\n          }\n        } else {\n          return {\n            input: state.input + value,\n            counter: state.counter + 1,\n            operator: '',\n            display: state.display + value,\n            answer: ''\n          }\n        }\n      }\n    });\n  }\n\n  decimalHandle() {\n    this.setState(state => {\n      if (state.input.length === 0) { // first input is '.'\n        return {\n          input: state.input + '0.',\n          display: state.display + '0.',\n          counter: 2\n        }\n      }\n      if (state.input.length === 1 && state.counter === 0) { // first input is 0 or 00\n        return {\n          input: state.input + '.',\n          display: state.display + '0.',\n          counter: 2\n        }\n      }\n      if (state.input.includes('.') && state.display.includes('.')) {\n        return;\n      } else {\n        return {\n          input: state.input + '.',\n          display: state.display + '.',\n          counter: 1 // all decimal counters - 05/10\n        }\n      }\n    });\n  }\n\n  operatorHandle(event) {\n    let operator = event.target.textContent;\n    let designOperator = event.target.textContent;\n    if (operator === '×')\n      operator = '*';\n    if (operator === '÷')\n      operator = '/';\n    if (operator === '^')\n      operator = '**';\n    this.setState(state => {\n      // if several operators are being input at first input\n      if (state.display.length === 0 && operator !== '-') {\n        return;\n      }\n      // if several operators are being input after the first input that is '-'\n      if (state.display.length === 3 && state.display[1] === '-') {\n        return;\n      }\n      if (state.display.includes('=') || state.display.includes('sqrt')) {\n        return {\n          memory: state.memory + state.input + operator,\n          input: '',\n          operator: designOperator,\n          display: state.answer + ' ' + designOperator + ' ',\n          counter: 0,\n          lastOperator: operator\n        }\n      } else {\n        return {\n          memory: state.memory + state.input + operator,\n          input: '',\n          operator: designOperator,\n          display: state.display + ' ' + designOperator + ' ',\n          counter: 0,\n          lastOperator: operator\n        }\n      }\n    });\n  }\n\n  sqrtHandle() {\n    this.setState(state => {\n      if (state.input.length > 0 || state.answer.length > 0) {\n        let num = (state.input.length > 0) ? state.input : state.answer;\n        let answer = Math.sqrt(num);\n        return {\n          answer: answer.toString(),\n          input: '',\n          display: 'sqrt(' + num + ')',\n          memory: answer\n        }\n      } else {\n        return;\n      }\n    });\n  }\n\n  percentHandle() {\n    this.setState(state => {\n      if (state.input.length > 0 || state.answer.length > 0) {\n        let num = (state.input.length > 0) ? state.input : state.answer;\n        let answer = num / 100;\n        return {\n          answer: answer.toString(),\n          input: '',\n          display: answer.toString(), // ??\n          memory: answer\n        }\n      } else {\n        return;\n      }\n    });\n  }\n\n  equalsHandle() {\n    this.setState(state => {\n      if (state.memory.length > 0 && state.input.length > 0) { // values were entered\n        let regex = /[+-/*//]/;\n        if (state.memory[0].match(regex) && state.memory.length === 1) { // if only the operator is pressed\n          return;\n        }\n        let str = state.memory + state.input;\n        let res = '';\n        // filter for multiple operator inputs like +-*/ etc\n        for (let i = 0; i < str.length; i++) {\n          if (str[i].match(regex) && str[i + 1] === '-' && !str[i + 2].match(regex)) { // minus case\n            res += str[i] + str[i + 1] + str[i + 2];\n            i += 2;\n          } else if (str[i].match(regex) && str[i + 1] === '*' && !str[i + 2].match(regex) && state.lastOperator === '**') { // power case\n            res += str[i] + str[i + 1] + str[i + 2];\n            i += 2;\n          } else if (str[i].match(regex) && str[i + 1].match(regex)) {\n            continue;\n          } else {\n            res += str[i];\n          }\n        }\n        let answer = eval(res).toString();\n        return {\n          input: '',\n          memory: answer, // for inputs after the '=' is pressed\n          operator: '',\n          // display: answer, - test version\n          display: state.display + ' = ' + answer, // home version\n          answer: answer,\n          counter: 0\n        }\n      }\n    });\n  }\n\n  clearHandle() {\n    console.clear();\n    this.setState({\n      input: '',\n      memory: '',\n      counter: 0,\n      operator: '',\n      lastOperator: '',\n      display: '',\n      answer: ''\n    });\n  }\n\n  render() {\n    let answer = this.state.answer;\n    let input = this.state.input;\n    let operator = this.state.operator;\n    let display = this.state.display;\n    // console.log('counter', this.state.counter);\n    return (\n      <div className=\"container\">\n        <div className=\"display\" id=\"display\">{display.length > 0 ? display : 0}</div>\n        <div className=\"input\">{input.length > 0 ? input : operator.length > 0 ? operator : answer.length > 0 ? answer : 0}</div>\n        <div className=\"cols-3\">\n          <div className=\"left\"></div>\n          <div className=\"pads\">\n            <div className=\"row-1\">\n              <div className=\"btn\" onClick={this.clearHandle} id=\"clear\" title=\"clear\">C</div>\n              <div className=\"btn\" onClick={this.operatorHandle} id=\"power\" title=\"power\">^</div>\n              <div className=\"btn\" onClick={this.percentHandle} id=\"percent\" title=\"percent\">%</div>\n              <div className=\"btn\" onClick={this.sqrtHandle} id=\"sqrt\" title=\"square root\">√</div>\n            </div>\n            <div className=\"row-2\">\n              <div className=\"btn\" onClick={this.inputHandle} id=\"seven\">7</div>\n              <div className=\"btn\" onClick={this.inputHandle} id=\"eight\">8</div>\n              <div className=\"btn\" onClick={this.inputHandle} id=\"nine\">9</div>\n              <div className=\"btn\" onClick={this.operatorHandle} id=\"divide\" title=\"divide\">÷</div>\n            </div>\n            <div className=\"row-3\">\n              <div className=\"btn\" onClick={this.inputHandle} id=\"four\">4</div>\n              <div className=\"btn\" onClick={this.inputHandle} id=\"five\">5</div>\n              <div className=\"btn\" onClick={this.inputHandle} id=\"six\">6</div>\n              <div className=\"btn\" onClick={this.operatorHandle} id=\"multiply\" title=\"multiply\">×</div>\n            </div>\n            <div className=\"row-4\">\n              <div className=\"btn\" onClick={this.inputHandle} id=\"one\">1</div>\n              <div className=\"btn\" onClick={this.inputHandle} id=\"two\">2</div>\n              <div className=\"btn\" onClick={this.inputHandle} id=\"three\">3</div>\n              <div className=\"btn\" onClick={this.operatorHandle} id=\"subtract\" title=\"subtract\">-</div>\n            </div>\n            <div className=\"row-5\">\n              <div className=\"btn\" onClick={this.inputHandle} id=\"zero\">0</div>\n              <div className=\"btn\" onClick={this.inputHandle} id=\"00\">00</div>\n              <div className=\"btn\" onClick={this.decimalHandle} id=\"decimal\">.</div>\n              <div className=\"btn\" onClick={this.operatorHandle} id=\"add\" title=\"add\">+</div>\n            </div>\n          </div>\n          <div className=\"right\"></div>\n        </div>\n        <div className=\"equals\" onClick={this.equalsHandle} id=\"equals\" title=\"equals\">=</div>\n      </div>\n    );\n  }\n}\n\nexport default Calculator;\n"],"sourceRoot":""}